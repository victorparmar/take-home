{"version":3,"sources":["components/img/funny-car-auto-insurance-quote.png","components/img/insurance-coverage.jpg","appUtil.js","components/Header.js","components/HomeDeleteInsuranceModal.js","core/appActions.js","services/wikipediaApi.js","components/HomeInsuranceTable.js","components/HomeNoInsuranceEmptyState.js","components/Home.js","components/AddInsuranceFormHint.js","components/AddInsuranceForm.js","components/Footer.js","redux/localStorageMiddleware.js","core/appReducer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","key","Header","props","react_default","a","createElement","className","style","marginBottom","paddingTop","paddingBottom","HomeDeleteInsuranceModal","handleCancelClick","event","preventDefault","_this","doModalActionCancel","handleOkClick","doModalActionExecute","this","showModal","id","role","content","renderButtonCancel","renderButtonExecute","type","onClick","Component","c","appActions","addInsuranceSetData","insurance","addInsurance","addInsuranceSaveThunk","insuranceCategories","location","dispatch","getState","category","push","insuranceCategoriesGetDataStart","insuranceCategoriesGetDataEnd","insuranceCategoriesSetData","insuranceCategoriesGetDataThunk","fetch","method","headers","Content-Type","then","response","json","responseJson","query","categorymembers","map","categoryMember","title","slice","catch","err","console","error","alert","removeInsurance","index","HomeInsuranceTable","state","modalContent","setState","Object","objectSpread","handleInsuranceClick","JSON","stringify","doRemoveInsurance","_this2","totalExpenses","insurances","forEach","yearlyPremium","components_HomeDeleteInsuranceModal","boundHandleInsuranceClick","bind","toFixed","connect","HomeNoInsuranceEmptyState","handleBtnAddInsuranceClick","Home","doResetAddInsuranceData","length","doRedirect","doInsuranceCategoriesGetDataThunk","insuranceCategoriesFetchIndicator","renderIndicator","renderContent","src","img","alt","renderInsurances","renderEmptyState","src_components_HomeInsuranceTable","components_HomeNoInsuranceEmptyState","AddInsuranceFormHint","formHint","AddInsuranceForm","handleTitleChange","doAddInsuranceSetData","target","value","handleYearlyPremiumChange","parseInt","handleCategorySelectionChange","handleSaveInsuranceClick","stopPropagation","titleErrorMsg","yearlyPremiumErrorMsg","doAddInsuranceSaveThunk","handleSubmit","renderForm","renderedInsuranceCategoryOptions","insuranceCategory","onSubmit","onChange","components_AddInsuranceFormHint","min","isNaN","Footer","href","wrapLocalStorageAccess","Chance","fn","e","name","log","localStorageMiddleware","_ref","next","action","ret","obj","window","localStorage","setItem","initialState","appReducer","arguments","undefined","toConsumableArray","concat","splice","history","createHashHistory","store","createStore","applyMiddleware","routerMiddleware","thunk","storedInsurances","getItem","parse","App","es","react_router_redux_es","src_components_Header","Switch","Route","exact","path","component","src_components_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fa739055.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/funny-car-auto-insurance-quote.f730b603.png\";","module.exports = __webpack_public_path__ + \"static/media/insurance-coverage.a2e88028.jpg\";","// @flow\nimport Chance from 'chance';\n\nimport type {Insurance} from './core/appActions';\n\nconst chance = new Chance();\n\nexport const getRandomInsurances = () : Array<Insurance> => {\n  \n  const numInsurances: number = chance.natural({min: 1, max: 10});\n  \n  const result: Array<Insurance> = [];\n\n  for (let i: number = 0; i < numInsurances; ++i) {\n    result.push({\n      title: chance.word({syllables: 3}),\n      category: 'Reinsurance',\n      yearlyPremium: chance.natural({min: 0, max: 1000})\n    });\n  }\n\n  return result;\n}\n\nconst wrapLocalStorageAccess = (fn) => {\n  try {\n    return fn();\n  } catch (e) {\n    if (e && e.name === 'SecurityError') {\n      console.log('Please enable cookies to be auto logged-in');\n    } else {\n      console.error(e);\n    }\n  }\n}\n\nexport const storeObject = (key: string, obj: *) => {\n  const fn = () => {\n    if (window.localStorage) {\n      window.localStorage.setItem(key, JSON.stringify(obj));\n    }\n  }\n\n  return wrapLocalStorageAccess(fn);\n}\n\nexport const getObject = (key: string) : * => {\n  const fn = () => {\n    if (window.localStorage) {\n      const value = window.localStorage.getItem(key);\n      if (value) {\n        return JSON.parse(value);\n      }\n    }\n\n    return null;\n  }\n\n  return wrapLocalStorageAccess(fn);\n}\n","// @flow\n\nimport React from 'react';\n\nimport './Header.css';\n\ntype Props = {};\n\nconst Header = (props: Props) => {\n\n  return (\n    <div className=\"bg-gray\" style={{marginBottom: '1rem'}}>\n      <section className=\"container grid-xs\" style={{paddingTop: '2rem', paddingBottom: '1rem'}}>\n        <h1 className=\"text-center title mysurance\">MySurance</h1>\n        <div className=\"text-center subtitle\">Stay secured, live free!</div>\n      </section>\n    </div>\n  );\n\n};\n\nexport default Header;\n","// @flow\nimport React, {Component} from 'react';\n\ntype Props = {\n  showModal: boolean,\n  content: string,\n  doModalActionCancel: Function,\n  doModalActionExecute: Function\n};\n\nclass HomeDeleteInsuranceModal extends Component<Props> {\n\n  handleCancelClick = (event: *) => {\n    event.preventDefault();\n    this\n      .props\n      .doModalActionCancel();\n  }\n\n  handleOkClick = (event: *) => {\n    event.preventDefault();\n    this\n      .props\n      .doModalActionExecute();\n    this\n      .props\n      .doModalActionCancel();\n  }\n\n  render() {\n    if (!this.props.showModal) {\n      return null;\n    }\n\n    return (\n      <div\n        id=\"delete-insurance-modal\"\n        className=\"modal modal-sm active\">\n        <div className=\"modal-overlay\"></div>\n        <div className=\"modal-container\" role=\"document\">\n          <div className=\"modal-header\">\n            {/*<button type=\"button\" className=\"btn btn-clear float-right\" aria-label=\"Close\"></button>*/}\n            <div className=\"modal-title\">\n              <h6>Delete Insurance</h6>\n            </div>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"content\">\n              <p>Are you sure you want to delete the following insurance?</p>\n              <code className=\"smash-it\">{this.props.content}</code>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            {this.renderButtonCancel()}\n            &nbsp;\n            {this.renderButtonExecute()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderButtonCancel() {\n    return (\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={this.handleCancelClick}>Cancel</button>\n    );\n  }\n\n  renderButtonExecute() {\n    return (\n      <button className=\"btn btn-primary\" type=\"button\" onClick={this.handleOkClick}>Delete</button>\n    );\n  }\n\n};\n\nexport default HomeDeleteInsuranceModal;\n","// @flow\nimport { push } from 'react-router-redux';\nimport fetch from 'isomorphic-fetch';\n\nimport {categoriesUrl, getInsuranceCategories} from '../services/wikipediaApi';\n\nexport const c = {\n  INSURANCE_CATEGORIES_GET_DATA_START: 'INSURANCE_CATEGORIES_GET_DATA_START',\n  INSURANCE_CATEGORIES_GET_DATA_END: 'INSURANCE_CATEGORIES_GET_DATA_END',\n  INSURANCE_CATEGORIES_SET_DATA: 'INSURANCE_CATEGORIES_SET_DATA',\n  ADD_INSURANCE_SET_DATA: 'ADD_INSURANCE_SET_DATA',\n  ADD_INSURANCE: 'ADD_INSURANCE',\n  REMOVE_INSURANCE: 'REMOVE_INSURANCE'\n};\n\nexport type Insurance = { \n  title: string, \n  yearlyPremium: number, \n  category: string \n};\n\nexport type AddInsurance = Insurance & { \n  titleErrorMsg: string,\n  yearlyPremiumErrorMsg: string \n};\n\nconst appActions = {\n  addInsuranceSetData: (insurance: Insurance) => {\n    return {\n      type: c.ADD_INSURANCE_SET_DATA,\n      insurance\n    };\n  },\n  addInsurance: (insurance: Insurance) => {\n    return {\n      type: c.ADD_INSURANCE,\n      insurance\n    };\n  },\n  addInsuranceSaveThunk: (insurance: Insurance, insuranceCategories: Array<string>, location: ?string) => {\n    return (dispatch: *, getState: *) => {\n      insurance.category = insurance.category ? insurance.category : insuranceCategories[0];\n\n      dispatch(appActions.addInsurance(insurance));\n      if (location) {\n        dispatch(push(location));\n      }\n    };\n  },\n  insuranceCategoriesGetDataStart: () => {\n    return {\n      type: c.INSURANCE_CATEGORIES_GET_DATA_START\n    };\n  },\n  insuranceCategoriesGetDataEnd: () => {\n    return {\n      type: c.INSURANCE_CATEGORIES_GET_DATA_END\n    };\n  },\n  insuranceCategoriesSetData: (insuranceCategories: Array<string>) => {\n    return {\n      type: c.INSURANCE_CATEGORIES_SET_DATA,\n      insuranceCategories\n    };\n  },\n  insuranceCategoriesGetDataThunk: (location: ?string) => {\n    return (dispatch: *, getState: *) => {\n      dispatch(appActions.insuranceCategoriesGetDataStart());\n      \n      return fetch(categoriesUrl, {\n          method: 'GET', \n          headers: {  \n            'Content-Type': 'application/json'\n          }\n        })\n        .then(response => {\n          return response.json();\n        })\n        .then(responseJson => {\n          const insuranceCategories: Array<string> = getInsuranceCategories(responseJson.query.categorymembers);\n          dispatch(appActions.insuranceCategoriesSetData(insuranceCategories));\n          dispatch(appActions.insuranceCategoriesGetDataEnd());\n          \n          if (location) {\n            dispatch(push(location));\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          alert(err);\n        });\n    };\n  },\n  removeInsurance: (index: number) => {\n    return {\n      type: c.REMOVE_INSURANCE,\n      index\n    };\n  }\n};\n\nexport default appActions;\n","// @flow\n\nexport type CategoryMember = {\n  pageid: number,\n  ns: number,\n  title: string\n};\n\nexport const getInsuranceCategories = (categoryMembers: Array<CategoryMember>) : Array<string> => {\n  \n  return categoryMembers.map((categoryMember: CategoryMember) => {\n    return categoryMember.title.slice(9);\n  });\n};\n\nexport const categoriesUrl = 'https://en.wikipedia.org/w/api.php?action=query&list=categorymembers&cmtitle=Category:Types_of_insurance&cmtype=subcat&format=json&origin=*';\n","// @flow\n\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport './HomeInsuranceTable.css';\n\nimport type {Insurance} from '../core/appActions';\n\nimport HomeDeleteInsuranceModal from './HomeDeleteInsuranceModal';\nimport appActions from '../core/appActions';\n\ntype Props = {\n  insurances: Array<Insurance>,\n  doRemoveInsurance: Function\n};\n\ntype State = {\n  showModal: boolean,\n  modalContent: string,\n  doModalActionExecute: Function\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    insurances: state.insurances,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    doRemoveInsurance: (index: number) => {\n      dispatch(appActions.removeInsurance(index));\n    }\n  };\n};\n\nclass HomeInsuranceTable extends Component<Props, State> {\n\n  state = {\n    showModal: false,\n    modalContent: '',\n    doModalActionExecute: () => {}\n  }\n\n  doModalActionCancel = () => {\n    const state = this.state;\n    this.setState({\n      ...state,\n      showModal: false\n    });\n  }\n\n  handleInsuranceClick = (insurance, index, event) => {\n    const state = this.state;\n\n    this.setState({\n      ...state,\n      showModal: true,\n      modalContent: JSON.stringify(insurance),\n      doModalActionExecute: () => {\n        this.props.doRemoveInsurance(index);\n      }\n    });\n  }\n\n  render() {\n    \n    let totalExpenses: number = 0;\n\n    this.props.insurances.forEach((insurance: Insurance) => {\n      totalExpenses += insurance.yearlyPremium;\n    });\n\n    return (\n      <div>\n        <HomeDeleteInsuranceModal \n          showModal={this.state.showModal}\n          content={this.state.modalContent}\n          doModalActionCancel={this.doModalActionCancel}\n          doModalActionExecute={this.state.doModalActionExecute} />\n\n        <p className=\"app-content\">\n          The following is a list of your current insurances. Click on an insurance to delete it.\n        </p>\n\n        <table className=\"table table-striped table-hover table-insurances\">\n          <thead>\n            <tr>\n              <th className=\"text-center\">Title</th>\n              <th className=\"text-center\">Category</th>\n              <th className=\"text-center\">Yearly Premium</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.props.insurances.map((insurance: Insurance, index: number) => {\n                const boundHandleInsuranceClick = this.handleInsuranceClick.bind(this, insurance, index);\n                \n                return (\n                  <tr key={index} onClick={boundHandleInsuranceClick}>\n                    <td>{insurance.title}</td>\n                    <td className=\"text-center\">{insurance.category}</td>\n                    <td className=\"text-right\">{insurance.yearlyPremium}</td>\n                  </tr>\n                );\n              })\n            }\n          </tbody>\n        </table>\n\n        <p className=\"text-right\">\n          <span className=\"total-expenses-label\">Total expenses:</span>\n          &nbsp;\n          <span className=\"total-expenses\">\n            CHF {totalExpenses.toFixed(2)}\n          </span>\n        </p>\n\n      </div>\n    );\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeInsuranceTable);\n","// @flow\n\nimport React from 'react';\n\ntype Props = {\n  handleBtnAddInsuranceClick: Function\n};\n\nconst HomeNoInsuranceEmptyState = (props: Props) => {\n\n  return (\n    <div className=\"empty\">\n      <div className=\"empty-icon\">\n        <i className=\"icon icon-people\"></i>\n      </div>\n      \n      <p className=\"empty-title h5\">You have no insurances</p>\n      <p className=\"empty-subtitle\">Click the button to add an insurance.</p>\n      <div className=\"empty-action\">\n        <button\n          id=\"btn-add-insurance\"\n          className=\"btn btn-primary\"\n          onClick={props.handleBtnAddInsuranceClick}>Add an insurance</button>\n      </div>\n    </div>\n  );\n}\n\nexport default HomeNoInsuranceEmptyState;\n","// @flow\n\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {push} from 'react-router-redux';\n\nimport img from './img/funny-car-auto-insurance-quote.png';\n\nimport type {Insurance} from '../core/appActions';\n\nimport HomeInsuranceTable from './HomeInsuranceTable';\nimport HomeNoInsuranceEmptyState from './HomeNoInsuranceEmptyState';\nimport appActions from '../core/appActions';\n\ntype Props = {\n  insurances: Array<Insurance>,\n  insuranceCategories: Array<string>,\n  insuranceCategoriesFetchIndicator: boolean,\n  doRedirect: Function,\n  doInsuranceCategoriesGetDataThunk: Function,\n  doResetAddInsuranceData: Function\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    insurances: state.insurances,\n    insuranceCategories: state.insuranceCategories,\n    insuranceCategoriesFetchIndicator: state.insuranceCategoriesFetchIndicator\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    doRedirect: (location: string) => {\n      dispatch(push(location));\n    },\n    doResetAddInsuranceData: () => {\n      dispatch(appActions.addInsuranceSetData({\n        title: '',\n        yearlyPremium: 0,\n        category: ''\n      }));\n    },\n    doInsuranceCategoriesGetDataThunk: (location: ?string) => {\n      dispatch(appActions.insuranceCategoriesGetDataThunk(location));\n    }\n  };\n};\n\nclass Home extends Component<Props> {\n\n  handleBtnAddInsuranceClick = () => {\n    this\n      .props\n      .doResetAddInsuranceData();\n    \n    const location = '/add-insurance';\n    \n    if (this.props.insuranceCategories.length) {\n      this.props.doRedirect(location);\n      return;\n    }\n\n    this.props.doInsuranceCategoriesGetDataThunk(location);\n  };\n\n  render() {\n    if (this.props.insuranceCategoriesFetchIndicator) {\n      return this.renderIndicator();\n    }\n    \n    return this.renderContent();\n  }\n\n  renderIndicator() {\n    return (\n      <div className=\"loading loading-lg\"></div>\n    );\n  }\n\n  renderContent() {\n    return (\n      <section className=\"container grid-xs\">\n\n        <p className=\"app-content\">\n          <img className=\"centered img-responsive\" src={img} alt=\"funny\"/>\n        </p>\n      \n        {\n          this.props.insurances.length ? this.renderInsurances() : this.renderEmptyState()\n        }\n\n      </section>\n    );\n  }\n\n  renderInsurances() {\n    return (\n      <div>\n        <HomeInsuranceTable/>\n\n        <p className=\"text-center app-content\">\n          <button\n            id=\"btn-add-insurance\"\n          className=\"btn btn-primary\"\n            onClick={this.handleBtnAddInsuranceClick}>Add an insurance</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderEmptyState() {\n    return (\n      <HomeNoInsuranceEmptyState \n        handleBtnAddInsuranceClick={this.handleBtnAddInsuranceClick}/>\n    );\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","// @flow\n\nimport React from 'react';\n\ntype AddInsuranceFormHintProps = {\n  formHint: string\n};\n\nconst AddInsuranceFormHint = (props: AddInsuranceFormHintProps) => {\n  if (!props.formHint) {\n    return null;\n  }\n\n  return (\n    <div className=\"form-group form-input-hint fade-in\">\n      <div className=\"col-4\"></div>\n      <div className=\"col-8\">\n        {props.formHint}\n      </div>\n    </div>\n  )\n};\n\n\nexport default AddInsuranceFormHint;\n","// @flow\n\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport img from './img/insurance-coverage.jpg';\n\nimport AddInsuranceFormHint from './AddInsuranceFormHint';\n\nimport type {Insurance, AddInsurance} from '../core/appActions';\nimport appActions from '../core/appActions';\n\ntype Props = {\n  insuranceCategories: Array<string>,\n  insuranceCategoriesFetchIndicator: boolean,\n  addInsurance: AddInsurance,\n  doRedirect: Function,\n  doInsuranceCategoriesGetDataThunk: Function,\n  doAddInsuranceSetData: Function,\n  doAddInsuranceSaveThunk: Function\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    insuranceCategories: state.insuranceCategories, \n    insuranceCategoriesFetchIndicator: state.insuranceCategoriesFetchIndicator, \n    addInsurance: state.addInsurance\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    doInsuranceCategoriesGetDataThunk: (location: ?string) => {\n      dispatch(appActions.insuranceCategoriesGetDataThunk(location));\n    },\n    doAddInsuranceSetData: (insurance: Insurance) => {\n      dispatch(appActions.addInsuranceSetData(insurance));\n    },\n    doAddInsuranceSaveThunk: (insurance: Insurance, insuranceCategories: Array<string>, location: ?string) => {\n      dispatch(appActions.addInsuranceSaveThunk(insurance, insuranceCategories, location));\n    }\n  };\n};\n\nclass AddInsuranceForm extends Component<Props> {\n\n  componentDidMount() {\n    // in case this is the first page loaded\n    if (this.props.insuranceCategories.length === 0) {\n      this\n        .props\n        .doInsuranceCategoriesGetDataThunk();  \n    }\n  }\n\n  handleTitleChange = (event) => {\n    this\n      .props\n      .doAddInsuranceSetData({\n        ...this.props.addInsurance,\n        title: event.target.value\n      });\n  }\n\n  handleYearlyPremiumChange = (event) => {\n    const value = parseInt(event.target.value, 10);\n    this\n      .props\n      .doAddInsuranceSetData({\n        ...this.props.addInsurance,\n        yearlyPremium: value\n      });\n  }\n\n  handleCategorySelectionChange = (event) => {\n    this\n      .props\n      .doAddInsuranceSetData({\n        ...this.props.addInsurance,\n        category: event.target.value\n      });\n  }\n\n  handleSaveInsuranceClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const insurance: Insurance = {\n      title: this.props.addInsurance.title,\n      yearlyPremium: this.props.addInsurance.yearlyPremium,\n      category: this.props.addInsurance.category\n    };\n\n    if (this.props.addInsurance.titleErrorMsg === '' &&\n        this.props.addInsurance.yearlyPremiumErrorMsg === '') {\n      this\n        .props\n        .doAddInsuranceSaveThunk(insurance, this.props.insuranceCategories, '/');\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  render() {\n    if (this.props.insuranceCategoriesFetchIndicator) {\n      return this.renderIndicator();\n    }\n\n    return this.renderForm();\n  }\n\n  renderIndicator() {\n    return (\n      <div className=\"loading loading-lg\"></div>\n    );\n  }\n\n  renderForm() {\n    const renderedInsuranceCategoryOptions = this.props.insuranceCategories.map((insuranceCategory: string) => {\n      return (\n        <option key={insuranceCategory} value={insuranceCategory}>{insuranceCategory}</option>\n      );\n    });\n    \n    return (\n      <section className=\"container grid-xs\">\n        <h5>Add an insurance</h5>\n\n        <p className=\"app-content\">\n          <img className=\"centered img-responsive\" src={img} alt=\"funny\"/>\n        </p>\n\n        <div className=\"columns app-content\">\n          <div className=\"column col-12\">\n\n            <form className=\"form-horizontal\" onSubmit={this.handleSubmit}>\n\n              <div className=\"form-group\">\n                <div className=\"col-4\">\n                  <label className=\"form-label\">Title</label>\n                </div>\n                <div className=\"col-8\">\n                  <input\n                    id=\"title\"\n                    className=\"form-input\"\n                    type=\"text\"\n                    value={this.props.addInsurance.title}\n                    onChange={this.handleTitleChange}/>\n                </div>\n              </div>\n\n              <AddInsuranceFormHint formHint={this.props.addInsurance.titleErrorMsg}/>\n\n              <div className=\"form-group\">\n                <div className=\"col-4\">\n                  <label className=\"form-label\">Yearly premium</label>\n                </div>\n                <div className=\"col-8\">\n                  <div className=\"input-group\">\n                    <span className=\"input-group-addon\">CHF</span>\n                    <input\n                      id=\"yearly-premium\"\n                      className=\"form-input\"\n                      type=\"number\"\n                      min=\"0\"\n                      value={isNaN(this.props.addInsurance.yearlyPremium) ? '' : this.props.addInsurance.yearlyPremium}\n                      onChange={this.handleYearlyPremiumChange}/>\n                  </div>\n                </div>\n\n              </div>\n\n              <AddInsuranceFormHint formHint={this.props.addInsurance.yearlyPremiumErrorMsg}/>\n\n              <div className=\"form-group\">\n                <div className=\"col-4\">\n                  <label className=\"form-label\">Category</label>\n                </div>\n                <div className=\"col-8\">\n                  <select\n                    className=\"form-select\"\n                    value={this.props.addInsurance.category}\n                    onChange={this.handleCategorySelectionChange}>\n                    {renderedInsuranceCategoryOptions}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"form-group main-action\">\n                <div className=\"col-12 text-center\">\n                  <button\n                    id=\"btn-save-insurance\"\n                    type=\"submit\"\n                    className={\"btn btn-primary \" + ((this.props.addInsurance.titleErrorMsg || this.props.addInsurance.yearlyPremiumErrorMsg ||\n                      !this.props.addInsurance.title)\n                    ? 'disabled'\n                    : '')}\n                    onClick={this.handleSaveInsuranceClick}>\n                    Save Insurance\n                  </button>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n        </div>\n\n      </section>\n    );\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddInsuranceForm);\n","// @flow\n\nimport React from 'react';\n\nimport './Footer.css';\n\ntype Props = {};\n\nconst Footer = (props: Props) => {\n\n  return (\n    <footer className=\"bg-gray\">\n      <section className=\"grid-footer container grid-xs\">\n        <div className=\"mysurance logo\">\n          MySurance\n        </div>\n        <div>\n        We do not use any cookies nor store any personal information. All data is stored in browser localStorage (if enabled).\n        </div>\n        <div>\n          Licensed under the <a href=\"https://github.com/wheresvic/mysurance/blob/master/LICENSE\">MIT License</a>.\n        </div>\n      </section>\n    </footer>\n  );\n\n};\n\nexport default Footer;\n","import {c} from '../core/appActions';\n\nimport {storeObject} from '../appUtil';\n\nconst localStorageMiddleware = ({ dispatch, getState }) => next => action => {\n  switch (action.type) {\n\n    case c.ADD_INSURANCE:\n    case c.REMOVE_INSURANCE:\n      \n      const ret = next(action);\n      const insurances = getState().insurances;\n      storeObject('insurances', insurances);\n      return ret;\n\n    default:\n      break;\n  }\n\n  return next(action);\n};\n\nexport default localStorageMiddleware;\n","// @flow\nimport { c } from './appActions';\nimport type { Insurance, AddInsurance } from './appActions';\n\nexport type AppState = {\n  insuranceCategories: Array<string>,\n  insuranceCategoriesFetchIndicator: boolean,\n  insurances: Array<Insurance>,\n  addInsurance: AddInsurance\n};\n\nexport const initialState: AppState = {\n  insuranceCategories: [],\n  insuranceCategoriesFetchIndicator: false,\n  insurances: [],\n  addInsurance: {\n    title: '',\n    titleErrorMsg: '',\n    yearlyPremium: 0,\n    yearlyPremiumErrorMsg: '',\n    category: ''\n  }\n};\n\nconst appReducer = (state: AppState = initialState, action: *) => {\n  switch (action.type) {\n    case c.ADD_INSURANCE:\n      {\n        return {\n          ...state,\n          insurances: [\n            ...state.insurances,\n            {\n              ...action.insurance\n            }\n          ]\n        };\n      }\n    case c.ADD_INSURANCE_SET_DATA:\n      {\n        const insurance: Insurance = action.insurance;\n\n        const addInsurance: AddInsurance = {\n          ...insurance,\n          titleErrorMsg: insurance.title ? '' : 'Required.',\n          yearlyPremiumErrorMsg: !isNaN(insurance.yearlyPremium) ? '' : 'Required.'\n        };\n\n        return {\n          ...state,\n          addInsurance\n        };\n      }\n    case c.INSURANCE_CATEGORIES_SET_DATA:\n      {\n        return {\n          ...state,\n          insuranceCategories: [\n            ...action.insuranceCategories\n          ]\n        };\n      }\n    case c.INSURANCE_CATEGORIES_GET_DATA_START: \n      {\n        return {\n          ...state,\n          insuranceCategoriesFetchIndicator: true\n        }\n      } \n    case c.INSURANCE_CATEGORIES_GET_DATA_END: \n      {\n        return {\n          ...state,\n          insuranceCategoriesFetchIndicator: false\n        }\n      } \n    case c.REMOVE_INSURANCE:\n      {\n        const insurances = [\n          ...state.insurances\n        ];\n        \n        insurances.splice(action.index, 1);\n\n        return {\n          ...state,\n          insurances\n        };\n      }\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","// @flow\nimport React, {Component} from 'react';\n\nimport {Route, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter, routerMiddleware} from 'react-router-redux';\n// import createHistory from 'history/createBrowserHistory';\nimport createHashHistory from 'history/createHashHistory'; // gh-pages does not support normal routing\n\n// import reduxLogger from 'redux-logger';\nimport {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './App.css';\n\nimport type {Insurance} from './core/appActions';\n\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport AddInsuranceForm from './components/AddInsuranceForm';\nimport Footer from './components/Footer';\n\nimport localStorageMiddleware from './redux/localStorageMiddleware';\nimport appReducer from './core/appReducer';\nimport appActions from './core/appActions';\nimport {getObject} from './appUtil';\n\ntype Props = {};\n\nconst history = createHashHistory();\nconst store = createStore(appReducer, applyMiddleware(routerMiddleware(history), /*reduxLogger,*/ localStorageMiddleware, thunk));\n\nconst storedInsurances: * = getObject('insurances');\nif (storedInsurances) {\n  storedInsurances.forEach((insurance: Insurance) => {\n    store.dispatch(appActions.addInsurance(insurance));\n  });\n}\n\n\n\nclass App extends Component<Props> {\n  render() {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <div>\n            <Header/>\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/add-insurance\" component={AddInsuranceForm}/>\n            </Switch>\n            <Footer/>\n          </div>\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// @flow\n\nimport './spectre.css/spectre.css';\nimport './spectre.css/spectre-exp.css';\nimport './spectre.css/spectre-icons.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}