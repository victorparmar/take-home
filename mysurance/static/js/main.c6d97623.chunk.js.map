{"version":3,"sources":["components/img/funny-car-auto-insurance-quote.png","components/img/insurance-coverage.jpg","components/Header.js","components/HomeDeleteInsuranceModal.js","core/appActions.js","services/wikipediaApi.js","components/HomeInsuranceTable.js","components/HomeNoInsuranceEmptyState.js","components/Home.js","components/AddInsuranceFormHint.js","components/AddInsuranceForm.js","components/Footer.js","appUtil.js","redux/localStorageMiddleware.js","core/appReducer.js","App.js","index.js"],"names":["module","exports","Header","props","className","style","marginBottom","paddingTop","paddingBottom","HomeDeleteInsuranceModal","handleCancelClick","event","preventDefault","doModalActionCancel","handleOkClick","doModalActionExecute","this","showModal","id","role","content","renderButtonCancel","renderButtonExecute","type","onClick","Component","c","appActions","addInsuranceSetData","insurance","addInsurance","addInsuranceSaveThunk","insuranceCategories","location","dispatch","getState","category","push","insuranceCategoriesGetDataStart","insuranceCategoriesGetDataEnd","insuranceCategoriesSetData","insuranceCategoriesGetDataThunk","fetch","method","headers","then","response","json","responseJson","query","categorymembers","map","categoryMember","title","slice","catch","err","console","error","alert","removeInsurance","index","HomeInsuranceTable","state","modalContent","setState","handleInsuranceClick","JSON","stringify","doRemoveInsurance","totalExpenses","insurances","forEach","yearlyPremium","boundHandleInsuranceClick","bind","key","toFixed","connect","HomeNoInsuranceEmptyState","handleBtnAddInsuranceClick","Home","doResetAddInsuranceData","length","doRedirect","doInsuranceCategoriesGetDataThunk","insuranceCategoriesFetchIndicator","renderIndicator","renderContent","src","img","alt","renderInsurances","renderEmptyState","AddInsuranceFormHint","formHint","AddInsuranceForm","handleTitleChange","doAddInsuranceSetData","target","value","handleYearlyPremiumChange","parseInt","handleCategorySelectionChange","handleSaveInsuranceClick","stopPropagation","titleErrorMsg","yearlyPremiumErrorMsg","doAddInsuranceSaveThunk","handleSubmit","renderForm","renderedInsuranceCategoryOptions","insuranceCategory","onSubmit","onChange","min","isNaN","Footer","href","wrapLocalStorageAccess","Chance","fn","e","name","log","localStorageMiddleware","next","action","ret","obj","window","localStorage","setItem","initialState","appReducer","splice","history","createHashHistory","store","createStore","applyMiddleware","routerMiddleware","thunk","storedInsurances","getItem","parse","App","Switch","Route","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6d97623.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/funny-car-auto-insurance-quote.f730b603.png\";","module.exports = __webpack_public_path__ + \"static/media/insurance-coverage.a2e88028.jpg\";","// @flow\n\nimport React from 'react';\n\nimport './Header.css';\n\ntype Props = {};\n\nconst Header = (props: Props) => {\n\n  return (\n    <div className=\"bg-gray\" style={{marginBottom: '1rem'}}>\n      <section className=\"container grid-xs\" style={{paddingTop: '2rem', paddingBottom: '1rem'}}>\n        <h1 className=\"text-center title mysurance\">MySurance</h1>\n        <div className=\"text-center subtitle\">Stay secured, live free!</div>\n      </section>\n    </div>\n  );\n\n};\n\nexport default Header;\n","// @flow\nimport React, {Component} from 'react';\n\ntype Props = {\n  showModal: boolean,\n  content: string,\n  doModalActionCancel: Function,\n  doModalActionExecute: Function\n};\n\nclass HomeDeleteInsuranceModal extends Component<Props> {\n\n  handleCancelClick = (event: *) => {\n    event.preventDefault();\n    this\n      .props\n      .doModalActionCancel();\n  }\n\n  handleOkClick = (event: *) => {\n    event.preventDefault();\n    this\n      .props\n      .doModalActionExecute();\n    this\n      .props\n      .doModalActionCancel();\n  }\n\n  render() {\n    if (!this.props.showModal) {\n      return null;\n    }\n\n    return (\n      <div\n        id=\"delete-insurance-modal\"\n        className=\"modal modal-sm active\">\n        <div className=\"modal-overlay\"></div>\n        <div className=\"modal-container\" role=\"document\">\n          <div className=\"modal-header\">\n            {/*<button type=\"button\" className=\"btn btn-clear float-right\" aria-label=\"Close\"></button>*/}\n            <div className=\"modal-title\">\n              <h6>Delete Insurance</h6>\n            </div>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"content\">\n              <p>Are you sure you want to delete the following insurance?</p>\n              <code className=\"smash-it\">{this.props.content}</code>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            {this.renderButtonCancel()}\n            &nbsp;\n            {this.renderButtonExecute()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderButtonCancel() {\n    return (\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={this.handleCancelClick}>Cancel</button>\n    );\n  }\n\n  renderButtonExecute() {\n    return (\n      <button className=\"btn btn-primary\" type=\"button\" onClick={this.handleOkClick}>Delete</button>\n    );\n  }\n\n};\n\nexport default HomeDeleteInsuranceModal;\n","// @flow\nimport { push } from 'react-router-redux';\nimport fetch from 'isomorphic-fetch';\n\nimport {categoriesUrl, getInsuranceCategories} from '../services/wikipediaApi';\n\nexport const c = {\n  INSURANCE_CATEGORIES_GET_DATA_START: 'INSURANCE_CATEGORIES_GET_DATA_START',\n  INSURANCE_CATEGORIES_GET_DATA_END: 'INSURANCE_CATEGORIES_GET_DATA_END',\n  INSURANCE_CATEGORIES_SET_DATA: 'INSURANCE_CATEGORIES_SET_DATA',\n  ADD_INSURANCE_SET_DATA: 'ADD_INSURANCE_SET_DATA',\n  ADD_INSURANCE: 'ADD_INSURANCE',\n  REMOVE_INSURANCE: 'REMOVE_INSURANCE'\n};\n\nexport type Insurance = { \n  title: string, \n  yearlyPremium: number, \n  category: string \n};\n\nexport type AddInsurance = Insurance & { \n  titleErrorMsg: string,\n  yearlyPremiumErrorMsg: string \n};\n\nconst appActions = {\n  addInsuranceSetData: (insurance: Insurance) => {\n    return {\n      type: c.ADD_INSURANCE_SET_DATA,\n      insurance\n    };\n  },\n  addInsurance: (insurance: Insurance) => {\n    return {\n      type: c.ADD_INSURANCE,\n      insurance\n    };\n  },\n  addInsuranceSaveThunk: (insurance: Insurance, insuranceCategories: Array<string>, location: ?string) => {\n    return (dispatch: *, getState: *) => {\n      insurance.category = insurance.category ? insurance.category : insuranceCategories[0];\n\n      dispatch(appActions.addInsurance(insurance));\n      if (location) {\n        dispatch(push(location));\n      }\n    };\n  },\n  insuranceCategoriesGetDataStart: () => {\n    return {\n      type: c.INSURANCE_CATEGORIES_GET_DATA_START\n    };\n  },\n  insuranceCategoriesGetDataEnd: () => {\n    return {\n      type: c.INSURANCE_CATEGORIES_GET_DATA_END\n    };\n  },\n  insuranceCategoriesSetData: (insuranceCategories: Array<string>) => {\n    return {\n      type: c.INSURANCE_CATEGORIES_SET_DATA,\n      insuranceCategories\n    };\n  },\n  insuranceCategoriesGetDataThunk: (location: ?string) => {\n    return (dispatch: *, getState: *) => {\n      dispatch(appActions.insuranceCategoriesGetDataStart());\n      \n      return fetch(categoriesUrl, {\n          method: 'GET', \n          headers: {  \n            'Content-Type': 'application/json'\n          }\n        })\n        .then(response => {\n          return response.json();\n        })\n        .then(responseJson => {\n          const insuranceCategories: Array<string> = getInsuranceCategories(responseJson.query.categorymembers);\n          dispatch(appActions.insuranceCategoriesSetData(insuranceCategories));\n          dispatch(appActions.insuranceCategoriesGetDataEnd());\n          \n          if (location) {\n            dispatch(push(location));\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          alert(err);\n        });\n    };\n  },\n  removeInsurance: (index: number) => {\n    return {\n      type: c.REMOVE_INSURANCE,\n      index\n    };\n  }\n};\n\nexport default appActions;\n","// @flow\n\nexport type CategoryMember = {\n  pageid: number,\n  ns: number,\n  title: string\n};\n\nexport const getInsuranceCategories = (categoryMembers: Array<CategoryMember>) : Array<string> => {\n  \n  return categoryMembers.map((categoryMember: CategoryMember) => {\n    return categoryMember.title.slice(9);\n  });\n};\n\nexport const categoriesUrl = 'https://en.wikipedia.org/w/api.php?action=query&list=categorymembers&cmtitle=Category:Types_of_insurance&cmtype=subcat&format=json&origin=*';\n","// @flow\n\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport './HomeInsuranceTable.css';\n\nimport type {Insurance} from '../core/appActions';\n\nimport HomeDeleteInsuranceModal from './HomeDeleteInsuranceModal';\nimport appActions from '../core/appActions';\n\ntype Props = {\n  insurances: Array<Insurance>,\n  doRemoveInsurance: Function\n};\n\ntype State = {\n  showModal: boolean,\n  modalContent: string,\n  doModalActionExecute: Function\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    insurances: state.insurances,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    doRemoveInsurance: (index: number) => {\n      dispatch(appActions.removeInsurance(index));\n    }\n  };\n};\n\nclass HomeInsuranceTable extends Component<Props, State> {\n\n  state = {\n    showModal: false,\n    modalContent: '',\n    doModalActionExecute: () => {}\n  }\n\n  doModalActionCancel = () => {\n    const state = this.state;\n    this.setState({\n      ...state,\n      showModal: false\n    });\n  }\n\n  handleInsuranceClick = (insurance, index, event) => {\n    const state = this.state;\n\n    this.setState({\n      ...state,\n      showModal: true,\n      modalContent: JSON.stringify(insurance),\n      doModalActionExecute: () => {\n        this.props.doRemoveInsurance(index);\n      }\n    });\n  }\n\n  render() {\n    \n    let totalExpenses: number = 0;\n\n    this.props.insurances.forEach((insurance: Insurance) => {\n      totalExpenses += insurance.yearlyPremium;\n    });\n\n    return (\n      <div>\n        <HomeDeleteInsuranceModal \n          showModal={this.state.showModal}\n          content={this.state.modalContent}\n          doModalActionCancel={this.doModalActionCancel}\n          doModalActionExecute={this.state.doModalActionExecute} />\n\n        <p className=\"app-content\">\n          The following is a list of your current insurances. Click on an insurance to delete it.\n        </p>\n\n        <table className=\"table table-striped table-hover table-insurances\">\n          <thead>\n            <tr>\n              <th className=\"text-center\">Title</th>\n              <th className=\"text-center\">Category</th>\n              <th className=\"text-center\">Yearly Premium</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.props.insurances.map((insurance: Insurance, index: number) => {\n                const boundHandleInsuranceClick = this.handleInsuranceClick.bind(this, insurance, index);\n                \n                return (\n                  <tr key={index} onClick={boundHandleInsuranceClick}>\n                    <td>{insurance.title}</td>\n                    <td className=\"text-center\">{insurance.category}</td>\n                    <td className=\"text-right\">{insurance.yearlyPremium}</td>\n                  </tr>\n                );\n              })\n            }\n          </tbody>\n        </table>\n\n        <p className=\"text-right\">\n          <span className=\"total-expenses-label\">Total expenses:</span>\n          &nbsp;\n          <span className=\"total-expenses\">\n            CHF {totalExpenses.toFixed(2)}\n          </span>\n        </p>\n\n      </div>\n    );\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeInsuranceTable);\n","// @flow\n\nimport React from 'react';\n\ntype Props = {\n  handleBtnAddInsuranceClick: Function\n};\n\nconst HomeNoInsuranceEmptyState = (props: Props) => {\n\n  return (\n    <div className=\"empty\">\n      <div className=\"empty-icon\">\n        <i className=\"icon icon-people\"></i>\n      </div>\n      \n      <p className=\"empty-title h5\">You have no insurances</p>\n      <p className=\"empty-subtitle\">Click the button to add an insurance.</p>\n      <div className=\"empty-action\">\n        <button\n          id=\"btn-add-insurance\"\n          className=\"btn btn-primary\"\n          onClick={props.handleBtnAddInsuranceClick}>Add an insurance</button>\n      </div>\n    </div>\n  );\n}\n\nexport default HomeNoInsuranceEmptyState;\n","// @flow\n\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {push} from 'react-router-redux';\n\nimport img from './img/funny-car-auto-insurance-quote.png';\n\nimport type {Insurance} from '../core/appActions';\n\nimport HomeInsuranceTable from './HomeInsuranceTable';\nimport HomeNoInsuranceEmptyState from './HomeNoInsuranceEmptyState';\nimport appActions from '../core/appActions';\n\ntype Props = {\n  insurances: Array<Insurance>,\n  insuranceCategories: Array<string>,\n  insuranceCategoriesFetchIndicator: boolean,\n  doRedirect: Function,\n  doInsuranceCategoriesGetDataThunk: Function,\n  doResetAddInsuranceData: Function\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    insurances: state.insurances,\n    insuranceCategories: state.insuranceCategories,\n    insuranceCategoriesFetchIndicator: state.insuranceCategoriesFetchIndicator\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    doRedirect: (location: string) => {\n      dispatch(push(location));\n    },\n    doResetAddInsuranceData: () => {\n      dispatch(appActions.addInsuranceSetData({\n        title: '',\n        yearlyPremium: 0,\n        category: ''\n      }));\n    },\n    doInsuranceCategoriesGetDataThunk: (location: ?string) => {\n      dispatch(appActions.insuranceCategoriesGetDataThunk(location));\n    }\n  };\n};\n\nclass Home extends Component<Props> {\n\n  handleBtnAddInsuranceClick = () => {\n    this\n      .props\n      .doResetAddInsuranceData();\n    \n    const location = '/add-insurance';\n    \n    if (this.props.insuranceCategories.length) {\n      this.props.doRedirect(location);\n      return;\n    }\n\n    this.props.doInsuranceCategoriesGetDataThunk(location);\n  };\n\n  render() {\n    if (this.props.insuranceCategoriesFetchIndicator) {\n      return this.renderIndicator();\n    }\n    \n    return this.renderContent();\n  }\n\n  renderIndicator() {\n    return (\n      <div className=\"loading loading-lg\"></div>\n    );\n  }\n\n  renderContent() {\n    return (\n      <section className=\"container grid-xs\">\n\n        <p className=\"app-content\">\n          <img className=\"centered img-responsive\" src={img} alt=\"funny\"/>\n        </p>\n      \n        {\n          this.props.insurances.length ? this.renderInsurances() : this.renderEmptyState()\n        }\n\n      </section>\n    );\n  }\n\n  renderInsurances() {\n    return (\n      <div>\n        <HomeInsuranceTable/>\n\n        <p className=\"text-center app-content\">\n          <button\n            id=\"btn-add-insurance\"\n          className=\"btn btn-primary\"\n            onClick={this.handleBtnAddInsuranceClick}>Add an insurance</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderEmptyState() {\n    return (\n      <HomeNoInsuranceEmptyState \n        handleBtnAddInsuranceClick={this.handleBtnAddInsuranceClick}/>\n    );\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","// @flow\n\nimport React from 'react';\n\ntype AddInsuranceFormHintProps = {\n  formHint: string\n};\n\nconst AddInsuranceFormHint = (props: AddInsuranceFormHintProps) => {\n  if (!props.formHint) {\n    return null;\n  }\n\n  return (\n    <div className=\"form-group form-input-hint fade-in\">\n      <div className=\"col-4\"></div>\n      <div className=\"col-8\">\n        {props.formHint}\n      </div>\n    </div>\n  )\n};\n\n\nexport default AddInsuranceFormHint;\n","// @flow\n\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport img from './img/insurance-coverage.jpg';\n\nimport AddInsuranceFormHint from './AddInsuranceFormHint';\n\nimport type {Insurance, AddInsurance} from '../core/appActions';\nimport appActions from '../core/appActions';\n\ntype Props = {\n  insuranceCategories: Array<string>,\n  insuranceCategoriesFetchIndicator: boolean,\n  addInsurance: AddInsurance,\n  doRedirect: Function,\n  doInsuranceCategoriesGetDataThunk: Function,\n  doAddInsuranceSetData: Function,\n  doAddInsuranceSaveThunk: Function\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    insuranceCategories: state.insuranceCategories, \n    insuranceCategoriesFetchIndicator: state.insuranceCategoriesFetchIndicator, \n    addInsurance: state.addInsurance\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    doInsuranceCategoriesGetDataThunk: (location: ?string) => {\n      dispatch(appActions.insuranceCategoriesGetDataThunk(location));\n    },\n    doAddInsuranceSetData: (insurance: Insurance) => {\n      dispatch(appActions.addInsuranceSetData(insurance));\n    },\n    doAddInsuranceSaveThunk: (insurance: Insurance, insuranceCategories: Array<string>, location: ?string) => {\n      dispatch(appActions.addInsuranceSaveThunk(insurance, insuranceCategories, location));\n    }\n  };\n};\n\nclass AddInsuranceForm extends Component<Props> {\n\n  componentDidMount() {\n    // in case this is the first page loaded\n    if (this.props.insuranceCategories.length === 0) {\n      this\n        .props\n        .doInsuranceCategoriesGetDataThunk();  \n    }\n  }\n\n  handleTitleChange = (event) => {\n    this\n      .props\n      .doAddInsuranceSetData({\n        ...this.props.addInsurance,\n        title: event.target.value\n      });\n  }\n\n  handleYearlyPremiumChange = (event) => {\n    const value = parseInt(event.target.value, 10);\n    this\n      .props\n      .doAddInsuranceSetData({\n        ...this.props.addInsurance,\n        yearlyPremium: value\n      });\n  }\n\n  handleCategorySelectionChange = (event) => {\n    this\n      .props\n      .doAddInsuranceSetData({\n        ...this.props.addInsurance,\n        category: event.target.value\n      });\n  }\n\n  handleSaveInsuranceClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const insurance: Insurance = {\n      title: this.props.addInsurance.title,\n      yearlyPremium: this.props.addInsurance.yearlyPremium,\n      category: this.props.addInsurance.category\n    };\n\n    if (this.props.addInsurance.titleErrorMsg === '' &&\n        this.props.addInsurance.yearlyPremiumErrorMsg === '') {\n      this\n        .props\n        .doAddInsuranceSaveThunk(insurance, this.props.insuranceCategories, '/');\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  render() {\n    if (this.props.insuranceCategoriesFetchIndicator) {\n      return this.renderIndicator();\n    }\n\n    return this.renderForm();\n  }\n\n  renderIndicator() {\n    return (\n      <div className=\"loading loading-lg\"></div>\n    );\n  }\n\n  renderForm() {\n    const renderedInsuranceCategoryOptions = this.props.insuranceCategories.map((insuranceCategory: string) => {\n      return (\n        <option key={insuranceCategory} value={insuranceCategory}>{insuranceCategory}</option>\n      );\n    });\n    \n    return (\n      <section className=\"container grid-xs\">\n        <h5>Add an insurance</h5>\n\n        <p className=\"app-content\">\n          <img className=\"centered img-responsive\" src={img} alt=\"funny\"/>\n        </p>\n\n        <div className=\"columns app-content\">\n          <div className=\"column col-12\">\n\n            <form className=\"form-horizontal\" onSubmit={this.handleSubmit}>\n\n              <div className=\"form-group\">\n                <div className=\"col-4\">\n                  <label className=\"form-label\">Title</label>\n                </div>\n                <div className=\"col-8\">\n                  <input\n                    id=\"title\"\n                    className=\"form-input\"\n                    type=\"text\"\n                    value={this.props.addInsurance.title}\n                    onChange={this.handleTitleChange}/>\n                </div>\n              </div>\n\n              <AddInsuranceFormHint formHint={this.props.addInsurance.titleErrorMsg}/>\n\n              <div className=\"form-group\">\n                <div className=\"col-4\">\n                  <label className=\"form-label\">Yearly premium</label>\n                </div>\n                <div className=\"col-8\">\n                  <div className=\"input-group\">\n                    <span className=\"input-group-addon\">CHF</span>\n                    <input\n                      id=\"yearly-premium\"\n                      className=\"form-input\"\n                      type=\"number\"\n                      min=\"0\"\n                      value={isNaN(this.props.addInsurance.yearlyPremium) ? '' : this.props.addInsurance.yearlyPremium}\n                      onChange={this.handleYearlyPremiumChange}/>\n                  </div>\n                </div>\n\n              </div>\n\n              <AddInsuranceFormHint formHint={this.props.addInsurance.yearlyPremiumErrorMsg}/>\n\n              <div className=\"form-group\">\n                <div className=\"col-4\">\n                  <label className=\"form-label\">Category</label>\n                </div>\n                <div className=\"col-8\">\n                  <select\n                    className=\"form-select\"\n                    value={this.props.addInsurance.category}\n                    onChange={this.handleCategorySelectionChange}>\n                    {renderedInsuranceCategoryOptions}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"form-group main-action\">\n                <div className=\"col-12 text-center\">\n                  <button\n                    id=\"btn-save-insurance\"\n                    type=\"submit\"\n                    className={\"btn btn-primary \" + ((this.props.addInsurance.titleErrorMsg || this.props.addInsurance.yearlyPremiumErrorMsg ||\n                      !this.props.addInsurance.title)\n                    ? 'disabled'\n                    : '')}\n                    onClick={this.handleSaveInsuranceClick}>\n                    Save Insurance\n                  </button>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n        </div>\n\n      </section>\n    );\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddInsuranceForm);\n","// @flow\n\nimport React from 'react';\n\nimport './Footer.css';\n\ntype Props = {};\n\nconst Footer = (props: Props) => {\n\n  return (\n    <footer className=\"bg-gray\">\n      <section className=\"grid-footer container grid-xs\">\n        <div className=\"mysurance logo\">\n          MySurance\n        </div>\n        <div>\n        We do not use any cookies nor store any personal information. All data is stored in browser localStorage (if enabled).\n        </div>\n        <div>\n          Licensed under the <a href=\"https://github.com/wheresvic/mysurance/blob/master/LICENSE\">MIT License</a>.\n        </div>\n      </section>\n    </footer>\n  );\n\n};\n\nexport default Footer;\n","// @flow\nimport Chance from 'chance';\n\nimport type {Insurance} from './core/appActions';\n\nconst chance = new Chance();\n\nexport const getRandomInsurances = () : Array<Insurance> => {\n  \n  const numInsurances: number = chance.natural({min: 1, max: 10});\n  \n  const result: Array<Insurance> = [];\n\n  for (let i: number = 0; i < numInsurances; ++i) {\n    result.push({\n      title: chance.word({syllables: 3}),\n      category: 'Reinsurance',\n      yearlyPremium: chance.natural({min: 0, max: 1000})\n    });\n  }\n\n  return result;\n}\n\nconst wrapLocalStorageAccess = (fn) => {\n  try {\n    return fn();\n  } catch (e) {\n    if (e && e.name === 'SecurityError') {\n      console.log('Please enable cookies to be auto logged-in');\n    } else {\n      console.error(e);\n    }\n  }\n}\n\nexport const storeObject = (key: string, obj: *) => {\n  const fn = () => {\n    if (window.localStorage) {\n      window.localStorage.setItem(key, JSON.stringify(obj));\n    }\n  }\n\n  return wrapLocalStorageAccess(fn);\n}\n\nexport const getObject = (key: string) : * => {\n  const fn = () => {\n    if (window.localStorage) {\n      const value = window.localStorage.getItem(key);\n      if (value) {\n        return JSON.parse(value);\n      }\n    }\n\n    return null;\n  }\n\n  return wrapLocalStorageAccess(fn);\n}\n","import {c} from '../core/appActions';\n\nimport {storeObject} from '../appUtil';\n\nconst localStorageMiddleware = ({ dispatch, getState }) => next => action => {\n  switch (action.type) {\n\n    case c.ADD_INSURANCE:\n    case c.REMOVE_INSURANCE:\n      \n      const ret = next(action);\n      const insurances = getState().insurances;\n      storeObject('insurances', insurances);\n      return ret;\n\n    default:\n      break;\n  }\n\n  return next(action);\n};\n\nexport default localStorageMiddleware;\n","// @flow\nimport { c } from './appActions';\nimport type { Insurance, AddInsurance } from './appActions';\n\nexport type AppState = {\n  insuranceCategories: Array<string>,\n  insuranceCategoriesFetchIndicator: boolean,\n  insurances: Array<Insurance>,\n  addInsurance: AddInsurance\n};\n\nexport const initialState: AppState = {\n  insuranceCategories: [],\n  insuranceCategoriesFetchIndicator: false,\n  insurances: [],\n  addInsurance: {\n    title: '',\n    titleErrorMsg: '',\n    yearlyPremium: 0,\n    yearlyPremiumErrorMsg: '',\n    category: ''\n  }\n};\n\nconst appReducer = (state: AppState = initialState, action: *) => {\n  switch (action.type) {\n    case c.ADD_INSURANCE:\n      {\n        return {\n          ...state,\n          insurances: [\n            ...state.insurances,\n            {\n              ...action.insurance\n            }\n          ]\n        };\n      }\n    case c.ADD_INSURANCE_SET_DATA:\n      {\n        const insurance: Insurance = action.insurance;\n\n        const addInsurance: AddInsurance = {\n          ...insurance,\n          titleErrorMsg: insurance.title ? '' : 'Required.',\n          yearlyPremiumErrorMsg: !isNaN(insurance.yearlyPremium) ? '' : 'Required.'\n        };\n\n        return {\n          ...state,\n          addInsurance\n        };\n      }\n    case c.INSURANCE_CATEGORIES_SET_DATA:\n      {\n        return {\n          ...state,\n          insuranceCategories: [\n            ...action.insuranceCategories\n          ]\n        };\n      }\n    case c.INSURANCE_CATEGORIES_GET_DATA_START: \n      {\n        return {\n          ...state,\n          insuranceCategoriesFetchIndicator: true\n        }\n      } \n    case c.INSURANCE_CATEGORIES_GET_DATA_END: \n      {\n        return {\n          ...state,\n          insuranceCategoriesFetchIndicator: false\n        }\n      } \n    case c.REMOVE_INSURANCE:\n      {\n        const insurances = [\n          ...state.insurances\n        ];\n        \n        insurances.splice(action.index, 1);\n\n        return {\n          ...state,\n          insurances\n        };\n      }\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","// @flow\nimport React, {Component} from 'react';\n\nimport {Route, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter, routerMiddleware} from 'react-router-redux';\n// import createHistory from 'history/createBrowserHistory';\nimport createHashHistory from 'history/createHashHistory'; // gh-pages does not support normal routing\n\n// import reduxLogger from 'redux-logger';\nimport {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './App.css';\n\nimport type {Insurance} from './core/appActions';\n\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport AddInsuranceForm from './components/AddInsuranceForm';\nimport Footer from './components/Footer';\n\nimport localStorageMiddleware from './redux/localStorageMiddleware';\nimport appReducer from './core/appReducer';\nimport appActions from './core/appActions';\nimport {getObject} from './appUtil';\n\ntype Props = {};\n\nconst history = createHashHistory();\nconst store = createStore(appReducer, applyMiddleware(routerMiddleware(history), /*reduxLogger,*/ localStorageMiddleware, thunk));\n\nconst storedInsurances: * = getObject('insurances');\nif (storedInsurances) {\n  storedInsurances.forEach((insurance: Insurance) => {\n    store.dispatch(appActions.addInsurance(insurance));\n  });\n}\n\n\n\nclass App extends Component<Props> {\n  render() {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <div>\n            <Header/>\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/add-insurance\" component={AddInsuranceForm}/>\n            </Switch>\n            <Footer/>\n          </div>\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// @flow\n\nimport './spectre.css/spectre.css';\nimport './spectre.css/spectre-exp.css';\nimport './spectre.css/spectre-icons.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}